<!DOCTYPE html>

<html>
<head>
	<title>
	</title>
</head>

<body>
	<div>
		<br>
		Book/CodeSamples: <a href="https://github.com/getify/You-Dont-Know-JS">https://github.com/getify/You-Dont-Know-JS</a><br>
		<br>
		Derek Banas tutorial: <a href="https://www.youtube.com/watch?v=fju9ii8YsGs">https://www.youtube.com/watch?v=fju9ii8YsGs</a><br>
		<br>
		MDN javascript: <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/A_re-introduction_to_JavaScript">https://developer.mozilla.org/en-US/docs/Web/JavaScript/A_re-introduction_to_JavaScript</a><br>
		<br>
		<a href="https://app.pluralsight.com/player?course=javascript-programming-basics&author=kyle-simpson&name=javascript-programming-basics-m1&clip=6&mode=live">https://app.pluralsight.com/player?course=javascript-programming-basics&author=kyle-simpson&name=javascript-programming-basics-m1&clip=6&mode=live</a><br>
		<br>
		What is javascript<br>
		<a href="https://developer.mozilla.org/en-US/docs/Glossary/JavaScript">https://developer.mozilla.org/en-US/docs/Glossary/JavaScript</a><br>
		JavaScript is a high-level, dynamic, weakly typed, object-based, multi-paradigm, and interpreted programming language.<br>
		JavaScript is a programming language that allows you to implement complex things on web pages — every time a web page does more than just sit there and display static information for you to look at — displaying timely content updates, or interactive maps, or animated 2D/3D graphics, or scrolling video jukeboxes, etc. — you can bet that JavaScript is probably involved.<br>
		It has nothing to do with the Java programming language<br>
		very different syntax, semantics, and uses<br>
		One of the three core technologies of the world wide web, alongside HTML and CSS<br>
		It is primarily a client-side language.<br>
		Examples: Excel, Word, apps on your phone<br>
		Server side would be web applications like, Amazon, or web services<br>
		Although a portion of websites always run clientside<br>
		<br>
		Is Javascript an interpreted language?<br>
		interpreted vs compiled<br>
		Compiled is .exe and .dll<br>
		in compiled before the application is ever<br>
		interpreted is line by line<br>
		bash, etc<br>
		If javascript was truly interpreted it would run line 1 then line 2 and error<br>
		but javascript is a little of both<br>
		what does that mean?<br>
		var a = 2+2;<br>
		2();<br>
		It looks at line one, then line two. then would try to execute the program<br>
		So line 1 would never run<br>
		It makes sure each line matches all the rules<br>
		Like reading a paper looking for periods at the end of every sentence before reading the page for context<br>
		Each javascript engine can choose how to operate on javascript, to compile first like Chromes V8<br>
		Evaluations<br>
		expression vs statement<br>
		a = b * 2; is an assignment statement<br>
		It is made up of multiple expressions<br>
		(b)<br>
		(2)<br>
		((b) * (2))<br>
		(a = ((b) * (2)));<br>
		b * 2 is an arithmetic expression<br>
		a = [ [b * 2] + [foo(c * 3)] ]<br>
		statement is the whole thing<br>
		a= is the assignment<br>
		a = b * 2 + foo(c * 3)<br>
		what order does this get done in?<br>
		left to right, except..<br>
		multiplication is "more precident"<br>
		multiplication before addition<br>
		should probably add the parenthesis for readability, a = (b * 2) + foo(c + 3); otherwise you depend on developers understanding all the rules of operator precidence<br>
		What about a = b + 2 * foo(c * 3);<br>
		how do we override this precedent? or modify this order?<br>
		consider this example: 2 * 3 + 4<br>
		We have 2 options for the result of this statement...<br>
		10 or 14<br>
		which is correct?<br>
		jQuery is a fast, small, and feature-rich JavaScript library. It makes things like HTML document traversal and manipulation, event handling, animation, and Ajax much simpler with an easy-to-use API that works across a multitude of browsers.<br>
		Lets get started by creating a page that will run some javascript.<br>
		Create a html file that runs javascript<br>
		Create an alert<br>
		Add a button<br>
		Call a javascript function from the button<br>
		Alert or console.log from the function<br>
		JS in same file<br>
		External js file<br>
		Document.getelementbyid example<br>
		Assignment calculator.html<br>
		<a href="https://coderwall.com/p/5tlhmw/converting-strings-to-number-in-javascript-pitfalls">https://coderwall.com/p/5tlhmw/converting-strings-to-number-in-javascript-pitfalls</a><br>
		<br>
	</div>
</body>
</html>